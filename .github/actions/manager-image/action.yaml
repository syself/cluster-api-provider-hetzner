name: "Manager Image"
description: "Build and Push Manager Image"
inputs:
  registry_password:
    description: "registry_password"
    required: true
runs:
  using: "composite"
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1

    - name: Login to ghcr.io for CI
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ env.registry_password }}

    - name: Generate metadata
      id: meta
      uses: ./.github/actions/metadata
      with:
        metadata_flavor: ${{ env.metadata_flavor }}
        metadata_tags: ${{ env.metadata_tags }}

    # Load Golang cache build from GitHub
    - name: Load Caph Golang cache build from GitHub
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
      id: cache
      with:
        path: /tmp/.cache/caph
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-caph-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-caph-
          ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-
          ${{ runner.os }}-go-

    - name: Create Caph cache directory
      if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      shell: bash
      run: |
        mkdir -p /tmp/.cache/caph

    # Import GitHub's cache build to docker cache
    - name: Copy Caph Golang cache to docker cache
      uses: docker/build-push-action@5cd11c3a4ced054e52742c5fd54dca954e0edd85 # v6.7.0
      with:
        provenance: false
        context: /tmp/.cache/caph
        file: ./images/cache/Dockerfile
        push: false
        platforms: linux/amd64
        target: import-cache

    - name: Build and push manager image
      uses: docker/build-push-action@5cd11c3a4ced054e52742c5fd54dca954e0edd85 # v6
      with:
        provenance: false
        context: .
        push: true
        file: ./images/caph/Dockerfile
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64
