name: "E2E Test"
description: "Runs the e2e test"
inputs:
  e2e_name:
    description: "e2e_name"
    required: true
  e2e_make_target:
    description: "e2e_make_target"
    required: true
  e2e_robot_user:
    description: "e2e_robot_user"
    required: false
  e2e_robot_password:
    description: "e2e_robot_password"
    required: false
  e2e_ssh_pub:
    description: "e2e_ssh_pub"
    required: false
  e2e_ssh_priv:
    description: "e2e_ssh_priv"
    required: false
runs:
  using: "composite"
  steps:
    - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0

    - uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4
      with:
        path: hack/tools/bin
        key: ${{ runner.os }}-tools-bin-e2e-${{ hashFiles('Makefile') }}
        restore-keys: |
          ${{ runner.os }}-tools-bin-e2e-
          ${{ runner.os }}-tools-bin-

    - name: Download artifact
      uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4
      with:
        name: test-release
        path: out

    - name: Install hcloud
      shell: bash
      env:
        hcloudctl_version: 1.40.0
      run: curl -fsSL https://github.com/hetznercloud/cli/releases/download/v${{ env.hcloudctl_version }}/hcloud-linux-amd64.tar.gz | tar -xzv hcloud ; mv hcloud hack/tools/bin/hcloud

    - name: Generate metadata
      id: meta
      uses: ./.github/actions/metadata
      with:
        metadata_flavor: ${{ env.metadata_flavor }}
        metadata_tags: ${{ env.metadata_tags }}

    - name: Prepull the pre-built image
      shell: bash
      run: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}
      env:
        TAG: ${{ steps.meta.outputs.version }}

    - name: Get HCLOUD_TOKEN # sets env.HCLOUD_TOKEN
      uses: hetznercloud/tps-action@dee5dd2546322c28ed8f74b910189066e8b6f31a # main

    - name: "e2e-${{ inputs.e2e_name }}"
      shell: bash
      env:
        CI: "true"
        REGISTRY: ${{ env.REGISTRY }}
        IMAGE_NAME: ${{ env.IMAGE_NAME }}
        TAG: ${{ steps.meta.outputs.version }}
        HCLOUD_TOKEN: ${{ env.HCLOUD_TOKEN }}
        HETZNER_ROBOT_USER: ${{ inputs.e2e_robot_user }}
        HETZNER_ROBOT_PASSWORD: ${{ inputs.e2e_robot_password }}
        HETZNER_SSH_PUB: ${{ inputs.e2e_ssh_pub }}
        HETZNER_SSH_PRIV: ${{ inputs.e2e_ssh_priv }}
        SKIP_IMAGE_BUILD: "1"
        CAPH_LATEST_VERSION: "v1.0.1"
      run: make ${{ inputs.e2e_make_target }}

    - name: Upload artifact
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
      if: ${{ !cancelled() }}
      with:
        name: e2e-${{ inputs.e2e_name }}
        path: _artifacts
