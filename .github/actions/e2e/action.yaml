name: "E2E Test"
description: "Runs the e2e test"
inputs:
  e2e_name:
    description: "e2e_name"
    required: true
  e2e_make_target:
    description: "e2e_make_target"
    required: true
  e2e_robot_user:
    description: "e2e_robot_user"
    required: false
  e2e_robot_password:
    description: "e2e_robot_password"
    required: false
  e2e_ssh_pub:
    description: "e2e_ssh_pub"
    required: false
  e2e_ssh_priv:
    description: "e2e_ssh_priv"
    required: false
runs:
  using: "composite"
  steps:
    - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
      with:
        go-version-file: "go.mod"

    - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
      with:
        path: hack/tools/bin
        key: ${{ runner.os }}-tools-bin-e2e-${{ hashFiles('Makefile') }}
        restore-keys: |
          ${{ runner.os }}-tools-bin-e2e-
          ${{ runner.os }}-tools-bin-

    - name: Download artifact
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
      with:
        name: test-release
        path: out

    - name: Install hcloud
      shell: bash
      env:
        hcloudctl_version: v1.52.0
      run: |
        curl -fsSL https://github.com/hetznercloud/cli/releases/download/${{ env.hcloudctl_version }}/hcloud-linux-amd64.tar.gz | tar -xzv hcloud
        mkdir -p hack/tools/bin/
        mv hcloud hack/tools/bin/hcloud

    - name: Generate metadata
      id: meta
      uses: ./.github/actions/metadata
      with:
        metadata_flavor: ${{ env.metadata_flavor }}
        metadata_tags: ${{ env.metadata_tags }}

    - name: Prepull the pre-built image
      shell: bash
      run: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}
      env:
        TAG: ${{ steps.meta.outputs.version }}

    - name: Get HCLOUD_TOKEN # sets env.HCLOUD_TOKEN
      uses: hetznercloud/tps-action@769ba703ee3ec4e5cca5f8d37d60c3f721b08335 # main

    - name: "e2e-${{ inputs.e2e_name }}"
      shell: bash
      env:
        CI: "true"
        REGISTRY: ${{ env.REGISTRY }}
        IMAGE_NAME: ${{ env.IMAGE_NAME }}
        TAG: ${{ steps.meta.outputs.version }}
        HCLOUD_TOKEN: ${{ env.HCLOUD_TOKEN }}
        HETZNER_ROBOT_USER: ${{ inputs.e2e_robot_user }}
        HETZNER_ROBOT_PASSWORD: ${{ inputs.e2e_robot_password }}
        HETZNER_SSH_PUB: ${{ inputs.e2e_ssh_pub }}
        HETZNER_SSH_PRIV: ${{ inputs.e2e_ssh_priv }}
        SKIP_IMAGE_BUILD: "1"
        CAPH_LATEST_VERSION: "v1.0.1"
      run: make ${{ inputs.e2e_make_target }}

    - name: Upload artifact
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      if: ${{ !cancelled() }}
      with:
        name: e2e-${{ inputs.e2e_name }}
        path: _artifacts
