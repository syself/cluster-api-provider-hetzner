apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: "${CLUSTER_NAME}-md-0"
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
            tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256
            kubeconfig: /etc/kubernetes/kubelet.conf
            authentication-token-webhook: "true"
            authorization-mode: Webhook
            anonymous-auth: "false"
            read-only-port: "0"
            event-qps: "5"
            rotate-server-certificates: "true"
            max-pods: "220"
            resolv-conf: /etc/kubernetes/resolv.conf
      files:
        - path: /etc/systemd/system/sys-fs-bpf.mount
          owner: "root:root"
          permissions: "0744"
          content: |
            [Unit]
            Description=Cilium BPF mounts
            Documentation=https://docs.cilium.io/
            DefaultDependencies=no
            Before=local-fs.target umount.target
            After=swap.target

            [Mount]
            What=bpffs
            Where=/sys/fs/bpf
            Type=bpf
            Options=rw,nosuid,nodev,noexec,relatime,mode=700

            [Install]
            WantedBy=multi-user.target
        - path: /etc/sysctl.d/99-cilium.conf
          owner: "root:root"
          permissions: "0744"
          content: |
            net.ipv4.conf.lxc*.rp_filter = 0
        - path: /etc/modules-load.d/crio.conf
          owner: "root:root"
          permissions: "0744"
          content: |
            overlay
            br_netfilter
        - path: /etc/crio/crio.conf.d/02-cgroup-manager.conf
          owner: "root:root"
          permissions: "0744"
          content: |
            [crio.runtime]
            default_runtime = "runc"
            conmon = "/usr/local/bin/conmon"
            conmon_env = [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
            ]
            selinux = false
            seccomp_profile = ""
            apparmor_profile = "crio-default"
            default_capabilities = [
              "CHOWN",
              "DAC_OVERRIDE",
              "FSETID",
              "FOWNER",
              "SETGID",
              "SETUID",
              "SETPCAP",
              "NET_BIND_SERVICE",
              "KILL",
              "MKNOD",
            ]
            [crio.runtime.runtimes.runc]
            runtime_path = ""
            runtime_type = "oci"
            runtime_root = "/run/runc"
        - path: /etc/yum.repos.d/kubernetes.repo
          owner: "root:root"
          permissions: "0744"
          content: |
            [kubernetes]
            name=Kubernetes
            baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
            enabled=1
            gpgcheck=1
            repo_gpgcheck=1
            gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        - path: /etc/sysctl.d/99-kubernetes-cri.conf
          owner: "root:root"
          permissions: "0744"
          content: |
            net.bridge.bridge-nf-call-iptables  = 1
            net.bridge.bridge-nf-call-ip6tables = 1
            net.ipv4.ip_forward                 = 1
        - path: /etc/sysctl.d/99-kubelet.conf
          owner: "root:root"
          permissions: "0744"
          content: |
            vm.overcommit_memory=1
            kernel.panic=10
            kernel.panic_on_oops=1
        - path: /etc/kubernetes/resolv.conf
          owner: "root:root"
          permissions: "0744"
          content: |
            nameserver 1.1.1.1
            nameserver 1.0.0.1
            nameserver 2606:4700:4700::1111
      preKubeadmCommands:
        - grep VERSION= /etc/os-release; uname -a
        - localectl set-locale LANG=en_US.UTF-8
        - localectl set-locale LANGUAGE=en_US.UTF-8
        - dnf update -y
        - dnf -y install at jq unzip wget socat mtr firewalld
        - sed -i '/swap/d' /etc/fstab
        - swapoff -a
        - modprobe overlay && modprobe br_netfilter && sysctl --system
        - wget https://github.com/opencontainers/runc/releases/download/v1.1.0/runc.amd64 -O /usr/local/sbin/runc && chmod +x /usr/local/sbin/runc
        - wget https://github.com/containers/conmon/releases/download/v2.1.0/conmon-x86.zip -O conmon.zip && unzip conmon.zip -d conmon && mv conmon/bin/conmon /usr/local/bin/conmon && chmod +x /usr/local/bin/conmon && rm -rf conmon.zip conmon
        - curl https://raw.githubusercontent.com/cri-o/cri-o/main/scripts/get | bash -s -- -t v1.23.1 -a amd64
        - wget https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz && tar zxvf crictl-v1.23.0-linux-amd64.tar.gz -C /usr/local/bin && rm -f crictl-v1.23.0-linux-amd64.tar.gz
        - rm -f /etc/cni/net.d/100-crio-bridge.conf /etc/cni/net.d/200-loopback.conf
        - systemctl enable crio.service && systemctl daemon-reload && systemctl enable crio
        - dnf install --setopt=obsoletes=0 -y kubelet-0:1.23.4-0 kubeadm-0:1.23.4-0 kubectl-0:1.23.4-0 python3-dnf-plugin-versionlock bash-completion --disableexcludes=kubernetes && dnf versionlock kubelet kubectl kubeadm && systemctl enable kubelet && systemctl start crio && kubeadm config images pull --kubernetes-version 1.23.4
        - dnf install -y policycoreutils-python-utils
        - semanage fcontext -a -t container_file_t /var/lib/etcd && mkdir -p /var/lib/etcd && restorecon -rv /var /etc
        - echo 'source <(kubectl completion bash)' >>/root/.bashrc
        - echo 'export KUBECONFIG=/etc/kubernetes/admin.conf' >>/root/.bashrc
        - setenforce 0 && sed -i -e '/^\(#\|\)SELINUX/s/^.*$/SELINUX=disabled/' /etc/selinux/config
        - dnf -y remove firewalld
        - dnf -y autoremove && dnf -y clean all
