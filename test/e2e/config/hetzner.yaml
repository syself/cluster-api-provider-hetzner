---
# CI E2E test test configuration scenario using locally build images and manifests for:
# - cluster-api
# - bootstrap kubeadm
# - control-plane kubeadm
# - hetzner

# For creating local dev images run make e2e-image from the main CAPH repository
images:
  - name: ghcr.io/syself/caph-staging:e2e
    loadBehavior: mustLoad
providers:
  - name: cluster-api
    type: CoreProvider
    versions:
      - name: v1.7.4
        value: "https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.7.4/core-components.yaml"
        type: "url"
        contract: v1beta1
        files:
          - sourcePath: "../data/shared/v1beta1/metadata.yaml"
        replacements:
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
          - old: "--enable-leader-election"
            new: "--enable-leader-election=false"
          - old: --metrics-addr=127.0.0.1:8080
            new: --metrics-addr=:8080

  - name: kubeadm
    type: BootstrapProvider
    versions:
      - name: v1.7.4
        value: "https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.7.4/bootstrap-components.yaml"
        type: "url"
        contract: "v1beta1"
        files:
          - sourcePath: "../data/shared/v1beta1/metadata.yaml"
        replacements:
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
          - old: "--enable-leader-election"
            new: "--enable-leader-election=false"
          - old: --metrics-addr=127.0.0.1:8080
            new: --metrics-addr=:8080

  - name: kubeadm
    type: ControlPlaneProvider
    versions:
      - name: v1.7.4
        value: "https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.7.4/control-plane-components.yaml"
        type: "url"
        files:
          - sourcePath: "../data/shared/v1beta1/metadata.yaml"
        replacements:
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
          - old: "--enable-leader-election"
            new: "--enable-leader-election=false"
          - old: --metrics-addr=127.0.0.1:8080
            new: --metrics-addr=:8080

  - name: hetzner
    type: InfrastructureProvider
    versions:
      - name: ${CAPH_LATEST_VERSION:-} # latest published release
        value: https://github.com/syself/cluster-api-provider-hetzner/releases/download/${CAPH_LATEST_VERSION:-}/infrastructure-components.yaml
        type: "url"
        contract: v1beta1
        files:
          - sourcePath: "../../../metadata.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-k8s-upgrade.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-k8s-upgrade-kcp-scale-in.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-hcloud-feature-packer.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-hcloud-feature-csr-off.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-hcloud-feature-load-balancer-extra-services.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-hcloud-feature-placement-groups.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-hcloud-feature-loadbalancer-off.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-network.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-node-drain.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-md-remediation.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-kcp-remediation.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-hetzner-baremetal.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-hetzner-baremetal-feature-raid-setup.yaml"
      - name: v1.0.99 # next; use manifest from source files
        value: ../../../config/default
        contract: v1beta1
        replacements:
          - old: ghcr.io/syself/caph-staging:latest
            new: ghcr.io/syself/caph-staging:e2e
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
          - old: --metrics-bind-addr=localhost:8080
            new: --metrics-bind-addr=:8080
        files:
          - sourcePath: "../../../metadata.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-k8s-upgrade.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-k8s-upgrade-kcp-scale-in.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-hcloud-feature-packer.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-hcloud-feature-csr-off.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-hcloud-feature-load-balancer-extra-services.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-hcloud-feature-placement-groups.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-hcloud-feature-loadbalancer-off.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-network.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-node-drain.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-md-remediation.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-kcp-remediation.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-hetzner-baremetal.yaml"
          - sourcePath: "../data/infrastructure-hetzner/v1beta1/cluster-template-hetzner-baremetal-feature-raid-setup.yaml"

variables:
  # Upgrade Test
  KUBERNETES_VERSION_MANAGEMENT: "v1.29.4"
  KUBERNETES_VERSION: "${KUBERNETES_VERSION:-v1.29.4}"
  KUBERNETES_VERSION_UPGRADE_FROM: "v1.28.9"
  KUBERNETES_VERSION_UPGRADE_TO: "v1.29.4"
  CONTROL_PLANE_MACHINE_TEMPLATE_UPGRADE_TO: "k8s-upgrade-control-plane"
  WORKERS_MACHINE_TEMPLATE_UPGRADE_TO: "k8s-upgrade-worker"
  KUBERNETES_IMAGE_UPGRADE_FROM: ${KUBERNETES_IMAGE_UPGRADE_FROM:-}
  KUBERNETES_IMAGE_UPGRADE_TO: ${KUBERNETES_IMAGE_UPGRADE_TO:-}
  ETCD_VERSION_UPGRADE_TO: "3.5.12-0"
  COREDNS_VERSION_UPGRADE_TO: "v1.11.1"
  IP_FAMILY: "IPv4"

  # NOTE: INIT_WITH_BINARY and INIT_WITH_KUBERNETES_VERSION are only used by the clusterctl upgrade test to initialize
  # the management cluster to be upgraded.
  INIT_WITH_BINARY: "https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.7.4/clusterctl-linux-amd64"
  INIT_WITH_PROVIDERS_CONTRACT: "v1beta1"
  INIT_WITH_KUBERNETES_VERSION: "v1.28.9"
  INIT_WITH_INFRASTRUCTURE_PROVIDER_VERSION: ${CAPH_LATEST_VERSION:-}

  # Cluster Addons
  CILIUM: "./data/cni/cilium/cilium.yaml"
  CCM: "./data/ccm/hcloud-ccm.yaml"
  CCM_NETWORK: "./data/ccm/hcloud-ccm-network.yaml"
  CCM_HETZNER: "./data/ccm/hcloud-ccm-hetzner.yaml"

  # Conformance testing variables
  CONFORMANCE_WORKER_MACHINE_COUNT: 3
  CONFORMANCE_CONTROL_PLANE_MACHINE_COUNT: 3
  KUBETEST_CONFIGURATION: "${KUBETEST_CONF_PATH:=./data/kubetest/conformance.yaml}"
  NODE_DRAIN_TIMEOUT: "60s"

  # Enabling the feature flags by setting the env variables.
  EXP_CLUSTER_RESOURCE_SET: "true"
  CLUSTER_TOPOLOGY: "true"

  # Hetzner Provider Variables
  HCLOUD_TOKEN: "admin123"
  HETZNER_ROBOT_USER: "robot"
  HETZNER_ROBOT_PASSWORD: "secret"
  HETZNER_SSH_PUB: "secret"
  HETZNER_SSH_PRIV: "secret"
  SSH_KEY_NAME: "test"
  HCLOUD_REGION: "nbg1"
  HCLOUD_IMAGE_NAME: ${HCLOUD_IMAGE_NAME:-}
  HCLOUD_CONTROL_PLANE_MACHINE_TYPE: cpx31
  HCLOUD_WORKER_MACHINE_TYPE: cpx21
  REDACT_LOG_SCRIPT: "../../hack/log/redact.sh"

intervals:
  # See cluster-api/test/e2e/config/docker.yaml
  # Syntax: [WAIT_TIME, POLL_INTERVAL]
  default/wait-controllers: ["3m", "2s"]
  default/wait-cluster: ["5m", "2s"] ## wait until Infrastructure == ready and ControlPlaneEndpoint is valid
  default/wait-control-plane: ["20m", "2s"] ## wait until first control plane is ready
  default/wait-worker-nodes: ["28m", "2s"] ## wait until all workers are ready from the moment when the control plane is ready
  default/wait-machine-pool-nodes: ["5m", "2s"]
  default/wait-delete-cluster: ["20m", "2s"] ## wait until cluster is deleted
  default/wait-machine-upgrade: ["20m", "2s"]
  default/wait-machine-pool-upgrade: ["5m", "2s"]
  default/wait-nodes-ready: ["10m", "2s"]
  default/wait-machine-remediation: ["5m", "2s"]
  default/wait-autoscaler: ["5m", "2s"]
  node-drain/wait-deployment-available: ["3m", "2s"]
  node-drain/wait-control-plane: ["15m", "2s"]
  node-drain/wait-machine-deleted: ["2m", "2s"]
  kcp-remediation/wait-machines: ["5m", "2s"]
  kcp-remediation/check-machines-stable: ["30s", "5s"]
  kcp-remediation/wait-machine-provisioned: ["5m", "2s"]
